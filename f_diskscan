#!/bin/bash
# ==================================================================
# FILE     f_diskscan
# MACHINE  all
# INFO     Use "mount" to scan for mounted disks. 
#          Give a choice of possible targets to choose from.
#          Will be used within other scripts.
#          Possible use-case:
#          
#          if ! f_use_default_disk "$DEFAULT_DISK" ; then
#            f_diskscan
#          fi
#          if [ -z "$CHOSEN_DISK" ] ; then 
#            die "no disk found"
#          fi
#          do something with $CHOSEN_DISK here...
#
# DATE     12.04.2019
# OWNER    Bischofberger
# ==================================================================

CHOSEN_DISK=""

# local helper function
reallysure() {
  echo -n -e "Do you really want to choose '$1' (y|n)? "
  read answer
  case "$answer" in
    "y") return 0 ;;  # 0 = success
    "n") return 1 ;;  # 1 = failure
    *  ) die "invalid answer" ;;
  esac
}

# to speed up things and for extra safety,
# first check if some disk of name $DEFAULT_DISK is available
# $1: default disk name
# defines the variable $CHOSEN_DISK
f_use_default_disk() {
  local disk=$(mount | grep "$1" | awk '$1 {print $3}')

  if [ -z "$disk" ] ; then
    return 1  # 1 = failure
  fi

  echo -n -e "\nPotential disk found: \"$disk\"\nWould you like to use it as remote disk (y|n)? "

  read answer
  case "$answer" in
    "y") 
      CHOSEN_DISK="$disk"
      return 0  # 0 = success
      ;;
    "n") 
      return 1  # 1 = failure
      ;;
    *  ) 
      die "invalid answer"
      ;;
  esac
}

# defines the variable $CHOSEN_DISK
f_diskscan() {
  local MOUNTLIST0=/tmp/mountlist0.tmp
  local MOUNTLIST1=/tmp/mountlist1.tmp

  # list all possibly mounted external disks and save them into a tempfile
  mount | grep 'sd[bcd]\|truecrypt' | awk '$1 {print $3}' > $MOUNTLIST0

  # put line numbers in front
  awk '{ printf("%d)\t%s\n", NR, $0) }' $MOUNTLIST0 > $MOUNTLIST1

  # the custom choice, last line
  echo -e "n)\t custom path" >> $MOUNTLIST1

  # for later check
  local NUMBER_OF_DISKS=$(wc -l < $MOUNTLIST1)-1

  # print list
  echo "List of mounted external disks:"
  cat $MOUNTLIST1 || die "Mountlist not found."
  echo -n -e "\nPlease enter the number of your disk or hit \"n\" for entering a custom path: "

  # input parser
  read answer
  if [[ $answer =~ ^[0-9]+$ ]] && (( answer > 0 && answer <= NUMBER_OF_DISKS )) ; then
    local disk=$(awk -F '\t' '$1 ~ /^'"$answer"\)'$/ {print $2}' $MOUNTLIST1)
    if reallysure "$disk" ; then
      CHOSEN_DISK="$disk"
    fi
  elif [[ $answer == n ]] ; then
    echo -n -e "\nEnter custom path: "
    read -e disk  # -e is for autocomplete
    if reallysure "$disk" ; then
      CHOSEN_DISK="$disk"
    fi
  else
    die "No valid disk path chosen."
  fi
}
